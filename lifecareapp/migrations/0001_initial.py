# Generated by Django 5.0.6 on 2025-08-24 18:55

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='equipment/')),
                ('daily_rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('available', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='DoctorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('professional_title', models.CharField(max_length=100)),
                ('license_number', models.CharField(max_length=50)),
                ('qualifications', models.TextField()),
                ('expertise', models.TextField()),
                ('languages', models.TextField()),
                ('available_location', models.CharField(max_length=100)),
                ('contact', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('charge_rates', models.FloatField(max_length=50)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='doctors/')),
                ('start_time', models.TimeField(default='08:00')),
                ('end_time', models.TimeField(default='17:00')),
                ('slot_duration', models.IntegerField(default=30, help_text='Duration in minutes')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.CharField(max_length=255)),
                ('gender', models.CharField(max_length=10)),
                ('county', models.CharField(max_length=50)),
                ('dob', models.DateField(blank=True, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=100)),
                ('medical_conditions', models.TextField(blank=True)),
                ('allergies', models.TextField(blank=True)),
                ('preferred_care_type', models.CharField(blank=True, max_length=100)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='dashboard_patient/')),
                ('medical_history_pdf', models.FileField(blank=True, null=True, upload_to='patient_medical_history/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'])])),
                ('medical_history_uploaded_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_profiles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('status', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lifecareapp.doctorprofile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lifecareapp.patientprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('patient', 'Patient'), ('doctor', 'Doctor')], default='patient', max_length=10)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, upload_to='doctors/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DoctorAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_slots', to='lifecareapp.doctorprofile')),
            ],
            options={
                'ordering': ['date', 'start_time'],
                'unique_together': {('doctor', 'date', 'start_time', 'end_time')},
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('appointment_type', models.CharField(choices=[('consultation', 'Consultation'), ('checkup', 'General Checkup'), ('follow_up', 'Follow-up'), ('emergency', 'Emergency'), ('specialist', 'Specialist Visit'), ('lab_test', 'Laboratory Test'), ('vaccination', 'Vaccination'), ('physical_therapy', 'Physical Therapy')], default='consultation', help_text='Type of appointment', max_length=50)),
                ('date', models.DateField(blank=True, help_text='Appointment date', null=True)),
                ('time', models.CharField(blank=True, help_text='Appointment time (HH:MM format)', max_length=10, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, help_text='Cost of appointment in KES', max_digits=10, null=True)),
                ('queue_position', models.PositiveIntegerField(blank=True, help_text='Position in queue for the appointment', null=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lifecareapp.doctorprofile')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lifecareapp.patientprofile')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('doctor', 'date', 'time')},
            },
        ),
    ]
